/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
	* Legacy classes.
	* Variables on the map in settings.scss.
	*/

/**
	* Breakpoint or media queries (responsive).
	*/
@mixin respond-to-min($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	}
}

@mixin respond-to-max($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	}
}

/**
	* Help Styles
	*/
@mixin max-width($max-width: 450px) {
	margin-left: auto;
	margin-right: auto;
	max-width: $max-width;
	width: 100%;
}

@mixin bordered(
	$top-color: $white,
	$right-color: $white,
	$bottom-color: $white,
	$left-color: $white
) {
	border-top: solid 1px $top-color;
	border-left: solid 1px $left-color;
	border-right: solid 1px $right-color;
	border-bottom: solid 1px $bottom-color;
}

@mixin border-radius(
	$topright: 0,
	$bottomright: 0,
	$bottomleft: 0,
	$topleft: 0
) {
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-webkit-border-top-left-radius: $topleft;
	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
	-moz-border-radius-topleft: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
	border-top-left-radius: $topleft;
	-webkit-background-clip: padding-box;
	-moz-background-clip: padding;
	background-clip: padding-box;
}

@mixin box-shadow($shadow: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	-webkit-box-shadow: $shadow;
	box-shadow: $shadow;
}

@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0.1) {
	-webkit-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
	-moz-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
	box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin opacity($opacity: 0.5) {
	-webkit-opacity: $opacity;
	-moz-opacity: $opacity;
	opacity: $opacity;
}

@mixin rotate($deg) {
	-webkit-transform: rotate($deg);
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-o-transform: rotate($deg);
	transform: rotate($deg);
}

@mixin scale($ratio) {
	-webkit-transform: scale($ratio);
	-moz-transform: scale($ratio);
	-ms-transform: scale($ratio);
	-o-transform: scale($ratio);
	transform: scale($ratio);
}

@mixin skew($x: 0, $y: 0) {
	-webkit-transform: skew($x, $y);
	-moz-transform: skew($x, $y);
	-ms-transform: skew($x, $y);
	-o-transform: skew($x, $y);
	transform: skew($x, $y);
}

@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin translate($x: 0, $y: 0) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	transform: translate($x, $y);
}

@mixin translate3d($x: 0, $y: 0, $z: 0) {
	-webkit-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);
	-ms-transform: translate3d($x, $y, $z);
	-o-transform: translate3d($x, $y, $z);
	transform: translate3d($x, $y, $z);
}

@mixin background-size($size) {
	-webkit-background-size: $size;
	-moz-background-size: $size;
	-o-background-size: $size;
	background-size: $size;
}

@mixin background-clip($clip) {
	-webkit-background-clip: $clip;
	-moz-background-clip: $clip;
	background-clip: $clip;
}

@mixin box-sizing($boxsize: border-box) {
	-webkit-box-sizing: $boxsize;
	-moz-box-sizing: $boxsize;
	-ms-box-sizing: $boxsize;
	box-sizing: $boxsize;
}

@mixin resize($direction: both) {
	resize: $direction;
	overflow: auto;
}

@mixin user-select($select) {
	-webkit-user-select: $select;
	-moz-user-select: $select;
	-o-user-select: $select;
	user-select: $select;
}

/**
	* We create prefixes for all browsers.
	* how to use: "@include vendor(border-radius, 4px);"
	*/
@mixin vendor($property, $value...) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}
